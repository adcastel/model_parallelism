%!PS-Adobe-2.0 EPSF-2.0
%%Title: backward_pass_vgg16.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Tue Apr 23 10:07:53 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 352 222
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 352 50 lineto 352 222 lineto 50 222 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (backward_pass_vgg16.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (adcastel)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Apr 23 10:07:53 2019)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 6048.00 3456.00 BoxColFill} if
/Helvetica findfont 160 scalefont setfont
/vshift -53 def
/Helvetica findfont 160 scalefont setfont
/Helvetica findfont 160 scalefont setfont
/Helvetica findfont 160 scalefont setfont
/Helvetica findfont 160 scalefont setfont
/Helvetica findfont 160 scalefont setfont
/Helvetica findfont 160 scalefont setfont
/Helvetica findfont 160 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
976 512 M
4783 0 V
stroke
LTb
LCb setrgbcolor
976 512 M
63 0 V
4720 0 R
-63 0 V
stroke
880 512 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.001)]
] -53.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
976 678 M
31 0 V
4752 0 R
-31 0 V
976 897 M
31 0 V
4752 0 R
-31 0 V
976 1009 M
31 0 V
4752 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
976 1062 M
4783 0 V
stroke
LTb
LCb setrgbcolor
976 1062 M
63 0 V
4720 0 R
-63 0 V
stroke
880 1062 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.01)]
] -53.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
976 1228 M
31 0 V
4752 0 R
-31 0 V
976 1447 M
31 0 V
4752 0 R
-31 0 V
976 1559 M
31 0 V
4752 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
976 1612 M
4783 0 V
stroke
LTb
LCb setrgbcolor
976 1612 M
63 0 V
4720 0 R
-63 0 V
stroke
880 1612 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.1)]
] -53.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
976 1778 M
31 0 V
4752 0 R
-31 0 V
976 1997 M
31 0 V
4752 0 R
-31 0 V
976 2109 M
31 0 V
4752 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
976 2163 M
4783 0 V
stroke
LTb
LCb setrgbcolor
976 2163 M
63 0 V
4720 0 R
-63 0 V
stroke
880 2163 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1)]
] -53.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
976 2328 M
31 0 V
4752 0 R
-31 0 V
976 2547 M
31 0 V
4752 0 R
-31 0 V
976 2659 M
31 0 V
4752 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
976 2713 M
4783 0 V
stroke
LTb
LCb setrgbcolor
976 2713 M
63 0 V
4720 0 R
-63 0 V
stroke
880 2713 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 10)]
] -53.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
976 2878 M
31 0 V
4752 0 R
-31 0 V
976 3097 M
31 0 V
4752 0 R
-31 0 V
976 3210 M
31 0 V
4752 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
976 3263 M
4783 0 V
stroke
LTb
LCb setrgbcolor
976 3263 M
63 0 V
4720 0 R
-63 0 V
stroke
880 3263 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
976 512 M
0 2751 R
stroke
976 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1574 512 M
0 2751 R
stroke
1574 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 2)]
] -53.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2172 512 M
0 2751 R
stroke
2172 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 4)]
] -53.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2770 512 M
0 2751 R
stroke
2770 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 6)]
] -53.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3368 512 M
0 2751 R
stroke
3368 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 8)]
] -53.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3965 512 M
0 2751 R
stroke
3965 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 10)]
] -53.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4563 512 M
0 2751 R
stroke
4563 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 12)]
] -53.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5161 512 M
0 2751 R
stroke
5161 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 14)]
] -53.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5759 512 M
0 2751 R
stroke
5759 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 16)]
] -53.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
976 3263 N
976 512 L
4783 0 V
0 2751 V
-4783 0 V
Z stroke
LCb setrgbcolor
128 1887 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 160.0 0.0 true true 0 (Time \(s\))]
] -53.3 MCshow
grestore
LTb
LCb setrgbcolor
3367 112 M
[ [(Helvetica) 160.0 0.0 true true 0 (Number of Layer)]
] -53.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
553 2880 N
0 320 V
5628 0 V
0 -320 V
-5628 0 V
Z stroke
% Begin plot #1
1.000 UP
1.000 UL
LT0
LC0 setrgbcolor
/Helvetica findfont 160 scalefont setfont
LCb setrgbcolor
1192 3120 M
(2 procs) Lshow
LT0
649 3120 M
447 0 V
179 -504 R
299 -60 V
299 -38 V
299 -75 V
299 -6 V
299 -4 V
299 -66 V
299 22 V
298 -2 V
299 -111 V
299 -210 V
299 -9 V
299 1 V
299 -183 V
299 -708 V
5759 790 L
1275 2616 Pls
1574 2556 Pls
1873 2518 Pls
2172 2443 Pls
2471 2437 Pls
2770 2433 Pls
3069 2367 Pls
3368 2389 Pls
3666 2387 Pls
3965 2276 Pls
4264 2066 Pls
4563 2057 Pls
4862 2058 Pls
5161 1875 Pls
5460 1167 Pls
5759 790 Pls
873 3120 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
LC1 setrgbcolor
/Helvetica findfont 160 scalefont setfont
LCb setrgbcolor
1192 2960 M
(4 procs) Lshow
LT1
649 2960 M
447 0 V
179 -382 R
299 -44 V
299 -55 V
299 -83 V
299 -32 V
299 -13 V
299 -62 V
299 -4 V
298 -9 V
299 -107 V
299 -197 V
299 -26 V
299 0 V
299 -234 V
299 -689 V
5759 670 L
1275 2578 Crs
1574 2534 Crs
1873 2479 Crs
2172 2396 Crs
2471 2364 Crs
2770 2351 Crs
3069 2289 Crs
3368 2285 Crs
3666 2276 Crs
3965 2169 Crs
4264 1972 Crs
4563 1946 Crs
4862 1946 Crs
5161 1712 Crs
5460 1023 Crs
5759 670 Crs
873 2960 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
LC2 setrgbcolor
/Helvetica findfont 160 scalefont setfont
LCb setrgbcolor
2599 3120 M
(6 procs) Lshow
LT2
2056 3120 M
447 0 V
1275 2599 M
299 -32 V
299 -66 V
299 -84 V
299 -47 V
299 -19 V
299 -60 V
299 -29 V
298 -14 V
299 -105 V
299 -189 V
299 -43 V
299 0 V
299 -275 V
5460 966 L
5759 684 L
1275 2599 Star
1574 2567 Star
1873 2501 Star
2172 2417 Star
2471 2370 Star
2770 2351 Star
3069 2291 Star
3368 2262 Star
3666 2248 Star
3965 2143 Star
4264 1954 Star
4563 1911 Star
4862 1911 Star
5161 1636 Star
5460 966 Star
5759 684 Star
2280 3120 Star
% End plot #3
% Begin plot #4
1.000 UP
1.000 UL
LT3
LC3 setrgbcolor
/Helvetica findfont 160 scalefont setfont
LCb setrgbcolor
2599 2960 M
(8 procs) Lshow
LT3
2056 2960 M
447 0 V
1275 2766 M
299 -62 V
299 -260 V
299 -83 V
299 -55 V
299 -15 V
299 -59 V
299 -31 V
298 -10 V
299 -105 V
299 -191 V
299 -32 V
299 0 V
299 -296 V
5460 905 L
5759 637 L
1275 2766 Box
1574 2704 Box
1873 2444 Box
2172 2361 Box
2471 2306 Box
2770 2291 Box
3069 2232 Box
3368 2201 Box
3666 2191 Box
3965 2086 Box
4264 1895 Box
4563 1863 Box
4862 1863 Box
5161 1567 Box
5460 905 Box
5759 637 Box
2280 2960 Box
% End plot #4
% Begin plot #5
1.000 UP
1.000 UL
LT4
LC4 setrgbcolor
/Helvetica findfont 160 scalefont setfont
LCb setrgbcolor
4006 3120 M
(10 procs) Lshow
LT4
3463 3120 M
447 0 V
1275 2798 M
299 -64 V
299 -262 V
299 -81 V
299 -63 V
299 -14 V
299 -62 V
299 -45 V
298 -11 V
299 -107 V
299 -198 V
299 -34 V
299 0 V
299 -334 V
5460 870 L
5759 602 L
1275 2798 BoxF
1574 2734 BoxF
1873 2472 BoxF
2172 2391 BoxF
2471 2328 BoxF
2770 2314 BoxF
3069 2252 BoxF
3368 2207 BoxF
3666 2196 BoxF
3965 2089 BoxF
4264 1891 BoxF
4563 1857 BoxF
4862 1857 BoxF
5161 1523 BoxF
5460 870 BoxF
5759 602 BoxF
3687 3120 BoxF
% End plot #5
% Begin plot #6
1.000 UP
1.000 UL
LT5
LC5 setrgbcolor
/Helvetica findfont 160 scalefont setfont
LCb setrgbcolor
4006 2960 M
(12 procs) Lshow
LT5
3463 2960 M
447 0 V
1275 2782 M
299 -64 V
299 -241 V
299 -81 V
299 -73 V
299 -14 V
299 -63 V
299 -50 V
298 -12 V
299 -107 V
299 -198 V
299 -36 V
299 0 V
299 -361 V
5460 841 L
5759 577 L
1275 2782 Circle
1574 2718 Circle
1873 2477 Circle
2172 2396 Circle
2471 2323 Circle
2770 2309 Circle
3069 2246 Circle
3368 2196 Circle
3666 2184 Circle
3965 2077 Circle
4264 1879 Circle
4563 1843 Circle
4862 1843 Circle
5161 1482 Circle
5460 841 Circle
5759 577 Circle
3687 2960 Circle
% End plot #6
% Begin plot #7
1.000 UP
1.000 UL
LT6
LC6 setrgbcolor
/Helvetica findfont 160 scalefont setfont
LCb setrgbcolor
5413 3120 M
(14 procs) Lshow
LT6
4870 3120 M
447 0 V
1275 2765 M
299 -61 V
299 -72 V
299 -74 V
299 -236 V
299 -14 V
299 -64 V
299 -62 V
298 -13 V
299 -106 V
299 -196 V
299 -32 V
299 0 V
299 -380 V
5460 815 L
5759 566 L
1275 2765 CircleF
1574 2704 CircleF
1873 2632 CircleF
2172 2558 CircleF
2471 2322 CircleF
2770 2308 CircleF
3069 2244 CircleF
3368 2182 CircleF
3666 2169 CircleF
3965 2063 CircleF
4264 1867 CircleF
4563 1835 CircleF
4862 1835 CircleF
5161 1455 CircleF
5460 815 CircleF
5759 566 CircleF
5094 3120 CircleF
% End plot #7
% Begin plot #8
1.000 UP
1.000 UL
LT7
LC7 setrgbcolor
/Helvetica findfont 160 scalefont setfont
LCb setrgbcolor
5413 2960 M
(16 procs) Lshow
LT7
4870 2960 M
447 0 V
1275 2738 M
299 -62 V
299 -71 V
299 -74 V
299 -251 V
299 -16 V
299 -60 V
299 -52 V
298 -16 V
299 -103 V
299 -185 V
299 -31 V
299 -4 V
299 -396 V
5460 808 L
5759 537 L
1275 2738 TriU
1574 2676 TriU
1873 2605 TriU
2172 2531 TriU
2471 2280 TriU
2770 2264 TriU
3069 2204 TriU
3368 2152 TriU
3666 2136 TriU
3965 2033 TriU
4264 1848 TriU
4563 1817 TriU
4862 1813 TriU
5161 1417 TriU
5460 808 TriU
5759 537 TriU
5094 2960 TriU
% End plot #8
1.000 UL
LTb
LCb setrgbcolor
976 3263 N
976 512 L
4783 0 V
0 2751 V
-4783 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
